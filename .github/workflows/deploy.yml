name: Build, push, and deploy

# Controls when the action will run.
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - name: Checkout main
        uses: actions/checkout@v4

      # Create a .env.local file from github action secrets for deployment
      - name: Create .env.local file
        run: |
          touch .env.local
          echo ${{ secrets.ENV_LOCAL}} | base64 -d >> .env.local
          cat .env.local
          
      - name: Create .env file
        run: |
          touch .env
          echo LOCAL_HOSTED_RUNTIME=false >> .env
          cat .env

      # Install doctl.
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      # Build a Docker image and tag the image with the $GITHUB_SHA.
      - name: Build container image
        run: docker build -t registry.digitalocean.com/csefest2024-registry/csefest2024-pp:$(echo $GITHUB_SHA | head -c7) .

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Push image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/csefest2024-registry/csefest2024-pp:$(echo $GITHUB_SHA | head -c7)

      # Deploy to DigitalOCcean Kubernetes.
      - name: Update deployment file
        run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|registry.digitalocean.com/csefest2024-registry/csefest2024-pp:'${TAG}'|' k8s/pp-deployment.yaml

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ vars.CLUSTER_NAME }}

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/k8s/pp-deployment.yaml

      - name: Verify deployment
        run: kubectl rollout status deployment/pp -n website

      - name: Update Service
        run: kubectl apply -f $GITHUB_WORKSPACE/k8s/pp-service.yaml

      - name: Update Ingress
        run: kubectl apply -f $GITHUB_WORKSPACE/k8s/pp-host.yaml

      - name: Update HPA
        run: kubectl apply -f $GITHUB_WORKSPACE/k8s/pp-hpa.yaml
